import streamlit as st
import google.generativeai as genai

# Configura a API key do Gemini
genai.configure(api_key="AIzaSyCypmU70v-JMILExV16mab91fe5ppY5xIo")

# Carrega o modelo
model = genai.GenerativeModel("gemini-2.0-flash")

def gerar_recomendacoes(classificacao, genero):
    prompt = (
        f"Recomende 5 filmes que sejam apropriados para a classifica√ß√£o et√°ria {classificacao} e que seja do genero {genero}. "
        "Para cada filme, diga o nome, uma pequena sinopse e o ano de lan√ßamento."
    )
    try:
        response = model.generate_content(prompt)
        return response.text
    except Exception as e:
        return f"Erro ao gerar recomenda√ß√µes: {str(e)}"

# T√≠tulo do site
st.title("üé¨ Recomendador de Filmes por Classifica√ß√£o Et√°ria")

# Op√ß√µes de classifica√ß√£o et√°ria
classificacoes = [
    "Livre",
    "10 anos",
    "12 anos",
    "14 anos",
    "16 anos",
    "18 anos"
]

generos = [
    "Aventura",
    "Terror",
    "Fic√ß√£o Cient√≠fica",
    "Com√©dia",
    "Drama",
    "Anima√ß√£o",
    "Outros"
]

# Sele√ß√£o da classifica√ß√£o
escolha = st.selectbox("Escolha a classifica√ß√£o et√°ria:", classificacoes)

# Sele√ß√£o do genero
escolha2 = st.selectbox("Escolha a classifica√ß√£o et√°ria:", generos)

# Bot√£o de gerar recomenda√ß√£o
if st.button("Recomendar Filmes"):
    with st.spinner("Buscando recomenda√ß√µes..."):
        resultado = gerar_recomendacoes(escolha, escolha2)
        st.subheader("üé• Recomenda√ß√µes de Filmes:")
        st.write(resultado)
